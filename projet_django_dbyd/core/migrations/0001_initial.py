# Generated by Django 4.2.6 on 2023-10-20 09:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ActivitePhysique",
            fields=[
                (
                    "id_activite_physique",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "activite_physique_journee_en_cours",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "nature_activite_physique",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "duree_activite_physique_en_min",
                    models.IntegerField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "activite_physique",
            },
        ),
        migrations.CreateModel(
            name="Administrator",
            fields=[
                (
                    "id_administrator",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("nom_administrator", models.CharField(max_length=30, unique=True)),
                (
                    "prenom_administrator",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "password_administrator",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
            ],
            options={
                "db_table": "administrator",
                "unique_together": {("id_administrator", "nom_administrator")},
            },
        ),
        migrations.CreateModel(
            name="Alimentation",
            fields=[
                (
                    "id_alimentation",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("consommation_alcool", models.IntegerField(blank=True, null=True)),
                ("grignotage_sale", models.IntegerField(blank=True, null=True)),
                ("grignotage_sucre", models.IntegerField(blank=True, null=True)),
                (
                    "nb_repas_journee_en_cours",
                    models.IntegerField(blank=True, null=True),
                ),
                ("quantite_eau_bu", models.FloatField(blank=True, null=True)),
                ("quantite_alcool_bu", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "alimentation",
            },
        ),
        migrations.CreateModel(
            name="AutreSymptome",
            fields=[
                (
                    "id_autre_symptome",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("dyspnee", models.IntegerField(blank=True, null=True)),
                ("oademe", models.IntegerField(blank=True, null=True)),
                ("episode_infectieux", models.IntegerField(blank=True, null=True)),
                ("fievre", models.IntegerField(blank=True, null=True)),
                ("palpitation", models.IntegerField(blank=True, null=True)),
                ("debut_palpitation", models.DateTimeField(blank=True, null=True)),
                (
                    "duree_palpitation_en_min",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("douleur_thoracique", models.IntegerField(blank=True, null=True)),
                (
                    "debut_douleur_thoracique",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "duree_douleur_thoracique_en_min",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("malaise", models.IntegerField(blank=True, null=True)),
                ("debut_malaise", models.DateTimeField(blank=True, null=True)),
                ("duree_malaise_en_min", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "autre_symptome",
            },
        ),
        migrations.CreateModel(
            name="EvaluationNiveauStress",
            fields=[
                (
                    "id_evaluation_niveau_stress",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("irritabilite", models.IntegerField(blank=True, null=True)),
                ("sentiment_depressif", models.IntegerField(blank=True, null=True)),
                ("bouche_gorge_seche", models.IntegerField(blank=True, null=True)),
                ("action_geste_impulsif", models.IntegerField(blank=True, null=True)),
                ("grincement_des_dents", models.IntegerField(blank=True, null=True)),
                (
                    "difficulte_a_rester_assis",
                    models.IntegerField(blank=True, null=True),
                ),
                ("cauchermars", models.IntegerField(blank=True, null=True)),
                ("diarrhee", models.IntegerField(blank=True, null=True)),
                ("attaque_verbale", models.IntegerField(blank=True, null=True)),
                ("haut_bas_emotif", models.IntegerField(blank=True, null=True)),
                ("grande_envie_de_pleurer", models.IntegerField(blank=True, null=True)),
                ("grande_envie_de_fuir", models.IntegerField(blank=True, null=True)),
                (
                    "grande_envie_de_faire_mal",
                    models.IntegerField(blank=True, null=True),
                ),
                ("pensees_embrouillees", models.IntegerField(blank=True, null=True)),
                ("debit_plus_rapide", models.IntegerField(blank=True, null=True)),
                (
                    "fatigue_ou_lourdeur_generalise",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "sentiment_de_etre_surchager",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "sentiment_de_etre_emotivement_fragile",
                    models.IntegerField(blank=True, null=True),
                ),
                ("sentiment_de_tristesse", models.IntegerField(blank=True, null=True)),
                ("sentiment_de_anxiete", models.IntegerField(blank=True, null=True)),
                ("tension_emotionnelle", models.IntegerField(blank=True, null=True)),
                (
                    "hostilite_envers_les_autres",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "tremblement_ou_geste_nerveux",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "begaiement_ou_hesitation_verbale",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "difficulte_incapacite_concentration",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "difficulte_organiser_pensee",
                    models.IntegerField(blank=True, null=True),
                ),
                ("difficulte_dormir", models.IntegerField(blank=True, null=True)),
                ("besoin_frequent_uriner", models.IntegerField(blank=True, null=True)),
                ("maux_estomac", models.IntegerField(blank=True, null=True)),
                ("difficulte_digerer", models.IntegerField(blank=True, null=True)),
                (
                    "geste_ou_sentiment_imaptience",
                    models.IntegerField(blank=True, null=True),
                ),
                ("maux_de_tete", models.IntegerField(blank=True, null=True)),
                ("douleur_dos_nuque", models.IntegerField(blank=True, null=True)),
                ("perte_gain_appetit", models.IntegerField(blank=True, null=True)),
                ("perte_interet_sexe", models.IntegerField(blank=True, null=True)),
                ("oublis_frequents", models.IntegerField(blank=True, null=True)),
                (
                    "douleur_serrement_poitrine",
                    models.IntegerField(blank=True, null=True),
                ),
                ("conflit_avec_les_autres", models.IntegerField(blank=True, null=True)),
                (
                    "difficulte_a_se_lever_post_sommeil",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "sentiment_hors_de_controle",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "difficulte_activite_longue_continue",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "mouvement_retrait_isolement",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "difficulte_endormissement",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "difficulte_post_contrariete",
                    models.IntegerField(blank=True, null=True),
                ),
                ("main_moite", models.IntegerField(blank=True, null=True)),
                ("impact_stress", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "evaluation_niveau_stress",
            },
        ),
        migrations.CreateModel(
            name="InformationCardiaque",
            fields=[
                (
                    "id_information_cardiaque",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "frequence_cardiaque_par_min",
                    models.FloatField(blank=True, null=True),
                ),
                ("ta_systolique_matin", models.FloatField(blank=True, null=True)),
                ("ta_systolique_soir", models.FloatField(blank=True, null=True)),
                ("ta_diastolique_matin", models.FloatField(blank=True, null=True)),
                ("ta_diastolique_soir", models.FloatField(blank=True, null=True)),
                (
                    "symptome_cardiovasculaire",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
            ],
            options={
                "db_table": "information_cardiaque",
            },
        ),
        migrations.CreateModel(
            name="Medecin",
            fields=[
                ("id_medecin", models.IntegerField(primary_key=True, serialize=False)),
                ("nom_medecin", models.CharField(max_length=30, unique=True)),
                (
                    "prenom_medecin",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "mail_medecin",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "password_medecin",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("tel_medecin", models.FloatField(blank=True, null=True)),
                (
                    "specialite_medecin",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "fk_id_administrator",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_id_administrator",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="medecin_fk_id_administrator_set",
                        to="core.administrator",
                    ),
                ),
                (
                    "fk_nom_administrator",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_nom_administrator",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.administrator",
                        to_field="nom_administrator",
                    ),
                ),
            ],
            options={
                "db_table": "medecin",
                "unique_together": {("id_medecin", "nom_medecin")},
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                ("id_patient", models.IntegerField(primary_key=True, serialize=False)),
                ("nom_patient", models.CharField(max_length=30)),
                (
                    "prenom_patient",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "mail_patient",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "password_patient",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("age_patient", models.IntegerField(blank=True, null=True)),
                (
                    "ville_patient",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("tel_patient", models.IntegerField(blank=True, null=True)),
                (
                    "sexe_patient",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("taille_patient", models.IntegerField(blank=True, null=True)),
                (
                    "fk_id_medecin",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_id_medecin",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.medecin",
                    ),
                ),
                (
                    "fk_nom_medecin",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_nom_medecin",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="patient_fk_nom_medecin_set",
                        to="core.medecin",
                        to_field="nom_medecin",
                    ),
                ),
            ],
            options={
                "db_table": "patient",
                "unique_together": {("id_patient", "nom_patient")},
            },
        ),
        migrations.CreateModel(
            name="Physique",
            fields=[
                ("id_physique", models.IntegerField(primary_key=True, serialize=False)),
                ("poids", models.FloatField(blank=True, null=True)),
                ("tour_de_taille_cm", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "physique",
            },
        ),
        migrations.CreateModel(
            name="PriseMedicament",
            fields=[
                (
                    "id_prise_medicament",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "nb_medicament_pris_dans_la_journee",
                    models.IntegerField(blank=True, null=True),
                ),
                ("oublie_medic_matin", models.IntegerField(blank=True, null=True)),
                ("oublie_medic_soir", models.IntegerField(blank=True, null=True)),
                ("effet_secondaire", models.IntegerField(blank=True, null=True)),
                ("symptome_particulier", models.IntegerField(blank=True, null=True)),
                (
                    "effet_secondaire_ou_symptome_description",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
            ],
            options={
                "db_table": "prise_medicament",
            },
        ),
        migrations.CreateModel(
            name="Reponse",
            fields=[
                ("id_reponse", models.IntegerField(primary_key=True, serialize=False)),
                ("date_reponse", models.DateField(blank=True, null=True)),
                (
                    "fk_activite_physique",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_activite_physique",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.activitephysique",
                    ),
                ),
                (
                    "fk_alimentation",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_alimentation",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.alimentation",
                    ),
                ),
                (
                    "fk_autre_symptome",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_autre_symptome",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.autresymptome",
                    ),
                ),
                (
                    "fk_evaluation_niveau_stress",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_evaluation_niveau_stress",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.evaluationniveaustress",
                    ),
                ),
                (
                    "fk_information_cardiaque",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_information_cardiaque",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.informationcardiaque",
                    ),
                ),
                (
                    "fk_physique",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_physique",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.physique",
                    ),
                ),
                (
                    "fk_prise_medicament",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_prise_medicament",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.prisemedicament",
                    ),
                ),
                (
                    "fk_utilisateur",
                    models.ForeignKey(
                        blank=True,
                        db_column="fk_utilisateur",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.patient",
                    ),
                ),
            ],
            options={
                "db_table": "reponse",
            },
        ),
    ]
